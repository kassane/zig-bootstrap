; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=xtensa -mcpu=esp32s2 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=XTENSA
; RUN: llc -mtriple=xtensa -mcpu=esp32 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=XTENSA-ATOMIC

define i8 @atomicrmw_xchg_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI0_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a10, 255
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB0_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB0_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB0_2: # Parent Loop BB0_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB0_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB0_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB0_2
; XTENSA-ATOMIC-NEXT:  .LBB0_4: # in Loop: Header=BB0_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB0_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 7
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_xchg_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI1_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a10, 255
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB1_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB1_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB1_2: # Parent Loop BB1_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB1_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB1_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB1_2
; XTENSA-ATOMIC-NEXT:  .LBB1_4: # in Loop: Header=BB1_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB1_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 7
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_xchg_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI2_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a10, 255
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB2_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB2_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB2_2: # Parent Loop BB2_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB2_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB2_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB2_2
; XTENSA-ATOMIC-NEXT:  .LBB2_4: # in Loop: Header=BB2_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB2_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 7
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_xchg_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI3_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a10, 255
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB3_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB3_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB3_2: # Parent Loop BB3_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB3_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB3_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB3_2
; XTENSA-ATOMIC-NEXT:  .LBB3_4: # in Loop: Header=BB3_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB3_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 7
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_xchg_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI4_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a10, 255
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB4_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB4_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB4_2: # Parent Loop BB4_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB4_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB4_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB4_2
; XTENSA-ATOMIC-NEXT:  .LBB4_4: # in Loop: Header=BB4_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB4_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 7
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i8 %b seq_cst
  ret i8 %1
}

define i8 @atomicrmw_add_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI5_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB5_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB5_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_add_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI6_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB6_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB6_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_add_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI7_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB7_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB7_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_add_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI8_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB8_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB8_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_add_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI9_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB9_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB9_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i8 %b seq_cst
  ret i8 %1
}

define i8 @atomicrmw_sub_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI10_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB10_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB10_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_sub_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI11_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB11_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB11_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_sub_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI12_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB12_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB12_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_sub_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI13_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB13_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB13_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_sub_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI14_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB14_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB14_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a14
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i8 %b seq_cst
  ret i8 %1
}

define i8 @atomicrmw_and_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI15_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a9, 255
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB15_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB15_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_and_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI16_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a9, 255
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB16_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB16_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_and_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI17_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a9, 255
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB17_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB17_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_and_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI18_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a9, 255
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB18_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB18_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_and_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI19_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a9, 255
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB19_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB19_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i8 %b seq_cst
  ret i8 %1
}

define i8 @atomicrmw_nand_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI20_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB20_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB20_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a13
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_nand_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI21_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB21_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB21_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a13
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_nand_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI22_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB22_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB22_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a13
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_nand_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI23_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB23_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB23_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a13
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_nand_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI24_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a10, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a9, a8, 3
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    ssl a9
; XTENSA-ATOMIC-NEXT:    sll a11, a8
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a10, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB24_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB24_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a9
; XTENSA-ATOMIC-NEXT:    srl a9, a13
; XTENSA-ATOMIC-NEXT:    and a2, a9, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i8 %b seq_cst
  ret i8 %1
}

define i8 @atomicrmw_or_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI25_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB25_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB25_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_or_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI26_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB26_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB26_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_or_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI27_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB27_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB27_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_or_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI28_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB28_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB28_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_or_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI29_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB29_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB29_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i8 %b seq_cst
  ret i8 %1
}

define i8 @atomicrmw_xor_i8_monotonic(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i8_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI30_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i8_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB30_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB30_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i8 %b monotonic
  ret i8 %1
}

define i8 @atomicrmw_xor_i8_acquire(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i8_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI31_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i8_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB31_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB31_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i8 %b acquire
  ret i8 %1
}

define i8 @atomicrmw_xor_i8_release(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i8_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI32_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i8_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB32_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB32_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i8 %b release
  ret i8 %1
}

define i8 @atomicrmw_xor_i8_acq_rel(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i8_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI33_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i8_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB33_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB33_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i8 %b acq_rel
  ret i8 %1
}

define i8 @atomicrmw_xor_i8_seq_cst(ptr %a, i8 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i8_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI34_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i8_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi a8, 255
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB34_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB34_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i8 %b seq_cst
  ret i8 %1
}

;define i8 @atomicrmw_max_i8_monotonic(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i8 %b monotonic
;  ret i8 %1
;}

;define i8 @atomicrmw_max_i8_acquire(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i8 %b acquire
;  ret i8 %1
;}

;define i8 @atomicrmw_max_i8_release(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i8 %b release
;  ret i8 %1
;}

;define i8 @atomicrmw_max_i8_acq_rel(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i8 %b acq_rel
;  ret i8 %1
;}

;define i8 @atomicrmw_max_i8_seq_cst(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i8 %b seq_cst
;  ret i8 %1
;}

;define i8 @atomicrmw_min_i8_monotonic(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i8 %b monotonic
;  ret i8 %1
;}

;define i8 @atomicrmw_min_i8_acquire(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i8 %b acquire
;  ret i8 %1
;}
;
;define i8 @atomicrmw_min_i8_release(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i8 %b release
;  ret i8 %1
;}
;
;define i8 @atomicrmw_min_i8_acq_rel(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i8 %b acq_rel
;  ret i8 %1
;}
;
;define i8 @atomicrmw_min_i8_seq_cst(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i8 %b seq_cst
;  ret i8 %1
;}

;define i8 @atomicrmw_umax_i8_monotonic(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i8 %b monotonic
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umax_i8_acquire(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i8 %b acquire
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umax_i8_release(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i8 %b release
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umax_i8_acq_rel(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i8 %b acq_rel
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umax_i8_seq_cst(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i8 %b seq_cst
;  ret i8 %1
;}

;define i8 @atomicrmw_umin_i8_monotonic(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i8 %b monotonic
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umin_i8_acquire(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i8 %b acquire
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umin_i8_release(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i8 %b release
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umin_i8_acq_rel(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i8 %b acq_rel
;  ret i8 %1
;}
;
;define i8 @atomicrmw_umin_i8_seq_cst(ptr %a, i8 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i8 %b seq_cst
;  ret i8 %1
;}

define i16 @atomicrmw_xchg_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI35_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB35_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB35_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB35_2: # Parent Loop BB35_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB35_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB35_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB35_2
; XTENSA-ATOMIC-NEXT:  .LBB35_4: # in Loop: Header=BB35_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB35_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 15
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_xchg_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI36_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB36_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB36_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB36_2: # Parent Loop BB36_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB36_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB36_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB36_2
; XTENSA-ATOMIC-NEXT:  .LBB36_4: # in Loop: Header=BB36_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB36_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 15
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_xchg_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI37_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB37_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB37_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB37_2: # Parent Loop BB37_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB37_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB37_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB37_2
; XTENSA-ATOMIC-NEXT:  .LBB37_4: # in Loop: Header=BB37_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB37_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 15
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_xchg_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI38_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB38_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB38_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB38_2: # Parent Loop BB38_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB38_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB38_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB38_2
; XTENSA-ATOMIC-NEXT:  .LBB38_4: # in Loop: Header=BB38_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB38_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 15
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_xchg_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI39_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    xor a11, a10, a11
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    and a14, a13, a10
; XTENSA-ATOMIC-NEXT:  .LBB39_1: # =>This Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    # Child Loop BB39_2 Depth 2
; XTENSA-ATOMIC-NEXT:    mov.n a13, a14
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:  .LBB39_2: # Parent Loop BB39_1 Depth=1
; XTENSA-ATOMIC-NEXT:    # => This Inner Loop Header: Depth=2
; XTENSA-ATOMIC-NEXT:    mov.n a15, a7
; XTENSA-ATOMIC-NEXT:    or a14, a12, a15
; XTENSA-ATOMIC-NEXT:    or a7, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a7, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a14, a9, 0
; XTENSA-ATOMIC-NEXT:    beq a7, a14, .LBB39_4
; XTENSA-ATOMIC-NEXT:  # %bb.3: # in Loop: Header=BB39_2 Depth=2
; XTENSA-ATOMIC-NEXT:    and a7, a14, a11
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB39_2
; XTENSA-ATOMIC-NEXT:  .LBB39_4: # in Loop: Header=BB39_1 Depth=1
; XTENSA-ATOMIC-NEXT:    and a14, a14, a10
; XTENSA-ATOMIC-NEXT:    bne a14, a13, .LBB39_1
; XTENSA-ATOMIC-NEXT:  # %bb.5:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    sext a2, a8, 15
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i16 %b seq_cst
  ret i16 %1
}

define i16 @atomicrmw_add_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI40_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB40_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB40_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_add_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI41_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB41_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB41_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_add_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI42_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB42_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB42_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_add_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI43_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB43_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB43_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_add_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI44_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB44_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    add.n a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB44_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i16 %b seq_cst
  ret i16 %1
}

define i16 @atomicrmw_sub_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI45_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB45_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB45_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_sub_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI46_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB46_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB46_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_sub_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI47_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB47_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB47_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_sub_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI48_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB48_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB48_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_sub_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI49_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    movi.n a12, -1
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    xor a12, a11, a12
; XTENSA-ATOMIC-NEXT:    l32i.n a14, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a13, a3
; XTENSA-ATOMIC-NEXT:  .LBB49_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a15, a14
; XTENSA-ATOMIC-NEXT:    and a14, a15, a11
; XTENSA-ATOMIC-NEXT:    sub a14, a14, a13
; XTENSA-ATOMIC-NEXT:    and a14, a14, a11
; XTENSA-ATOMIC-NEXT:    and a7, a15, a12
; XTENSA-ATOMIC-NEXT:    or a7, a14, a7
; XTENSA-ATOMIC-NEXT:    wsr a15, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a7, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a14, a7
; XTENSA-ATOMIC-NEXT:    bne a7, a15, .LBB49_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a14
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i16 %b seq_cst
  ret i16 %1
}

define i16 @atomicrmw_and_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI50_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a9, .LCPI50_0
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB50_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB50_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_and_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI51_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a9, .LCPI51_0
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB51_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB51_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_and_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI52_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a9, .LCPI52_0
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB52_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB52_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_and_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI53_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a9, .LCPI53_0
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB53_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB53_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_and_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI54_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a9, .LCPI54_0
; XTENSA-ATOMIC-NEXT:    and a10, a3, a9
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a11, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a11
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a10, a10
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    xor a9, a9, a11
; XTENSA-ATOMIC-NEXT:    or a9, a9, a10
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB54_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    and a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB54_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i16 %b seq_cst
  ret i16 %1
}

define i16 @atomicrmw_nand_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI55_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB55_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB55_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a13
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_nand_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI56_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB56_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB56_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a13
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_nand_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI57_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB57_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB57_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a13
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_nand_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI58_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB58_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB58_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a13
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_nand_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_nand_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI59_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_nand_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 3
; XTENSA-ATOMIC-NEXT:    and a8, a8, a2
; XTENSA-ATOMIC-NEXT:    sub a9, a2, a8
; XTENSA-ATOMIC-NEXT:    slli a8, a8, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 1
; XTENSA-ATOMIC-NEXT:    slli a10, a10, 16
; XTENSA-ATOMIC-NEXT:    addi.n a10, a10, -1
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a11, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a13, a9, 0
; XTENSA-ATOMIC-NEXT:    sll a12, a3
; XTENSA-ATOMIC-NEXT:  .LBB59_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a14, a13
; XTENSA-ATOMIC-NEXT:    and a13, a14, a11
; XTENSA-ATOMIC-NEXT:    and a13, a13, a12
; XTENSA-ATOMIC-NEXT:    and a13, a13, a11
; XTENSA-ATOMIC-NEXT:    xor a15, a14, a11
; XTENSA-ATOMIC-NEXT:    or a15, a13, a15
; XTENSA-ATOMIC-NEXT:    wsr a14, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a15, a9, 0
; XTENSA-ATOMIC-NEXT:    mov.n a13, a15
; XTENSA-ATOMIC-NEXT:    bne a15, a14, .LBB59_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a8, a13
; XTENSA-ATOMIC-NEXT:    and a2, a8, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw nand ptr %a, i16 %b seq_cst
  ret i16 %1
}

define i16 @atomicrmw_or_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI60_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI60_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB60_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB60_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_or_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI61_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI61_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB61_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB61_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_or_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI62_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI62_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB62_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB62_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_or_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI63_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI63_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB63_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB63_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_or_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI64_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI64_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB64_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    or a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB64_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i16 %b seq_cst
  ret i16 %1
}

define i16 @atomicrmw_xor_i16_monotonic(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i16_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI65_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i16_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI65_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB65_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB65_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i16 %b monotonic
  ret i16 %1
}

define i16 @atomicrmw_xor_i16_acquire(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i16_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI66_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i16_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI66_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB66_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB66_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i16 %b acquire
  ret i16 %1
}

define i16 @atomicrmw_xor_i16_release(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i16_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI67_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i16_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI67_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB67_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB67_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i16 %b release
  ret i16 %1
}

define i16 @atomicrmw_xor_i16_acq_rel(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i16_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI68_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i16_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI68_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB68_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB68_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i16 %b acq_rel
  ret i16 %1
}

define i16 @atomicrmw_xor_i16_seq_cst(ptr %a, i16 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i16_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI69_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i16_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI69_0
; XTENSA-ATOMIC-NEXT:    and a9, a3, a8
; XTENSA-ATOMIC-NEXT:    _slli a8, a2, 3
; XTENSA-ATOMIC-NEXT:    movi.n a10, 24
; XTENSA-ATOMIC-NEXT:    and a8, a8, a10
; XTENSA-ATOMIC-NEXT:    ssl a8
; XTENSA-ATOMIC-NEXT:    sll a9, a9
; XTENSA-ATOMIC-NEXT:    movi.n a10, -4
; XTENSA-ATOMIC-NEXT:    and a10, a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a12, a10, 0
; XTENSA-ATOMIC-NEXT:  .LBB69_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a13, a12
; XTENSA-ATOMIC-NEXT:    xor a11, a13, a9
; XTENSA-ATOMIC-NEXT:    wsr a13, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a11, a10, 0
; XTENSA-ATOMIC-NEXT:    mov.n a12, a11
; XTENSA-ATOMIC-NEXT:    bne a13, a11, .LBB69_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a9, a11
; XTENSA-ATOMIC-NEXT:    ssr a8
; XTENSA-ATOMIC-NEXT:    srl a2, a9
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i16 %b seq_cst
  ret i16 %1
}

;define i16 @atomicrmw_max_i16_monotonic(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i16 %b monotonic
;  ret i16 %1
;}
;
;define i16 @atomicrmw_max_i16_acquire(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i16 %b acquire
;  ret i16 %1
;}
;
;define i16 @atomicrmw_max_i16_release(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i16 %b release
;  ret i16 %1
;}
;
;define i16 @atomicrmw_max_i16_acq_rel(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i16 %b acq_rel
;  ret i16 %1
;}
;
;define i16 @atomicrmw_max_i16_seq_cst(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i16 %b seq_cst
;  ret i16 %1
;}

;define i16 @atomicrmw_min_i16_monotonic(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i16 %b monotonic
;  ret i16 %1
;}
;
;define i16 @atomicrmw_min_i16_acquire(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i16 %b acquire
;  ret i16 %1
;}
;
;define i16 @atomicrmw_min_i16_release(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i16 %b release
;  ret i16 %1
;}
;
;define i16 @atomicrmw_min_i16_acq_rel(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i16 %b acq_rel
;  ret i16 %1
;}
;
;define i16 @atomicrmw_min_i16_seq_cst(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i16 %b seq_cst
;  ret i16 %1
;}

;define i16 @atomicrmw_umax_i16_monotonic(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i16 %b monotonic
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umax_i16_acquire(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i16 %b acquire
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umax_i16_release(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i16 %b release
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umax_i16_acq_rel(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i16 %b acq_rel
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umax_i16_seq_cst(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i16 %b seq_cst
;  ret i16 %1
;}

;define i16 @atomicrmw_umin_i16_monotonic(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i16 %b monotonic
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umin_i16_acquire(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i16 %b acquire
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umin_i16_release(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i16 %b release
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umin_i16_acq_rel(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i16 %b acq_rel
;  ret i16 %1
;}
;
;define i16 @atomicrmw_umin_i16_seq_cst(ptr %a, i16 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i16 %b seq_cst
;  ret i16 %1
;}

define i32 @atomicrmw_xchg_i32_monotonic(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI70_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB70_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a8, a9
; XTENSA-ATOMIC-NEXT:    wsr a8, scompare1
; XTENSA-ATOMIC-NEXT:    mov.n a9, a3
; XTENSA-ATOMIC-NEXT:    s32c1i a9, a2, 0
; XTENSA-ATOMIC-NEXT:    bne a9, a8, .LBB70_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i32 %b monotonic
  ret i32 %1
}

define i32 @atomicrmw_xchg_i32_acquire(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI71_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB71_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a8, a9
; XTENSA-ATOMIC-NEXT:    wsr a8, scompare1
; XTENSA-ATOMIC-NEXT:    mov.n a9, a3
; XTENSA-ATOMIC-NEXT:    s32c1i a9, a2, 0
; XTENSA-ATOMIC-NEXT:    bne a9, a8, .LBB71_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i32 %b acquire
  ret i32 %1
}

define i32 @atomicrmw_xchg_i32_release(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI72_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB72_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a8, a9
; XTENSA-ATOMIC-NEXT:    wsr a8, scompare1
; XTENSA-ATOMIC-NEXT:    mov.n a9, a3
; XTENSA-ATOMIC-NEXT:    s32c1i a9, a2, 0
; XTENSA-ATOMIC-NEXT:    bne a9, a8, .LBB72_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i32 %b release
  ret i32 %1
}

define i32 @atomicrmw_xchg_i32_acq_rel(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i32_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI73_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i32_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB73_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a8, a9
; XTENSA-ATOMIC-NEXT:    wsr a8, scompare1
; XTENSA-ATOMIC-NEXT:    mov.n a9, a3
; XTENSA-ATOMIC-NEXT:    s32c1i a9, a2, 0
; XTENSA-ATOMIC-NEXT:    bne a9, a8, .LBB73_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i32 %b acq_rel
  ret i32 %1
}

define i32 @atomicrmw_xchg_i32_seq_cst(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xchg_i32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI74_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xchg_i32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB74_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a8, a9
; XTENSA-ATOMIC-NEXT:    wsr a8, scompare1
; XTENSA-ATOMIC-NEXT:    mov.n a9, a3
; XTENSA-ATOMIC-NEXT:    s32c1i a9, a2, 0
; XTENSA-ATOMIC-NEXT:    bne a9, a8, .LBB74_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xchg ptr %a, i32 %b seq_cst
  ret i32 %1
}

define i32 @atomicrmw_add_i32_monotonic(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI75_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB75_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    add.n a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB75_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i32 %b monotonic
  ret i32 %1
}

define i32 @atomicrmw_add_i32_acquire(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI76_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB76_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    add.n a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB76_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i32 %b acquire
  ret i32 %1
}

define i32 @atomicrmw_add_i32_release(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI77_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB77_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    add.n a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB77_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i32 %b release
  ret i32 %1
}

define i32 @atomicrmw_add_i32_acq_rel(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i32_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI78_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i32_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB78_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    add.n a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB78_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i32 %b acq_rel
  ret i32 %1
}

define i32 @atomicrmw_add_i32_seq_cst(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_add_i32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI79_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_add_i32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB79_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    add.n a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB79_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw add ptr %a, i32 %b seq_cst
  ret i32 %1
}

define i32 @atomicrmw_sub_i32_monotonic(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI80_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB80_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    sub a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB80_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i32 %b monotonic
  ret i32 %1
}

define i32 @atomicrmw_sub_i32_acquire(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI81_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB81_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    sub a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB81_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i32 %b acquire
  ret i32 %1
}

define i32 @atomicrmw_sub_i32_release(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI82_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB82_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    sub a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB82_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i32 %b release
  ret i32 %1
}

define i32 @atomicrmw_sub_i32_acq_rel(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i32_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI83_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i32_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB83_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    sub a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB83_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i32 %b acq_rel
  ret i32 %1
}

define i32 @atomicrmw_sub_i32_seq_cst(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_sub_i32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI84_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_sub_i32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB84_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    sub a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB84_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw sub ptr %a, i32 %b seq_cst
  ret i32 %1
}

define i32 @atomicrmw_and_i32_monotonic(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI85_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB85_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    and a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB85_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i32 %b monotonic
  ret i32 %1
}

define i32 @atomicrmw_and_i32_acquire(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI86_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB86_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    and a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB86_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i32 %b acquire
  ret i32 %1
}

define i32 @atomicrmw_and_i32_release(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI87_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB87_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    and a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB87_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i32 %b release
  ret i32 %1
}

define i32 @atomicrmw_and_i32_acq_rel(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i32_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI88_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i32_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB88_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    and a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB88_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i32 %b acq_rel
  ret i32 %1
}

define i32 @atomicrmw_and_i32_seq_cst(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_and_i32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI89_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_and_i32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB89_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    and a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB89_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw and ptr %a, i32 %b seq_cst
  ret i32 %1
}

;define i32 @atomicrmw_nand_i32_monotonic(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw nand ptr %a, i32 %b monotonic
;  ret i32 %1
;}
;
;define i32 @atomicrmw_nand_i32_acquire(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw nand ptr %a, i32 %b acquire
;  ret i32 %1
;}
;
;define i32 @atomicrmw_nand_i32_release(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw nand ptr %a, i32 %b release
;  ret i32 %1
;}
;
;define i32 @atomicrmw_nand_i32_acq_rel(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw nand ptr %a, i32 %b acq_rel
;  ret i32 %1
;}
;
;define i32 @atomicrmw_nand_i32_seq_cst(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw nand ptr %a, i32 %b seq_cst
;  ret i32 %1
;}

define i32 @atomicrmw_or_i32_monotonic(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI90_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB90_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    or a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB90_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i32 %b monotonic
  ret i32 %1
}

define i32 @atomicrmw_or_i32_acquire(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI91_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB91_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    or a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB91_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i32 %b acquire
  ret i32 %1
}

define i32 @atomicrmw_or_i32_release(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI92_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB92_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    or a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB92_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i32 %b release
  ret i32 %1
}

define i32 @atomicrmw_or_i32_acq_rel(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i32_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI93_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i32_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB93_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    or a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB93_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i32 %b acq_rel
  ret i32 %1
}

define i32 @atomicrmw_or_i32_seq_cst(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_or_i32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI94_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_or_i32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB94_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    or a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB94_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw or ptr %a, i32 %b seq_cst
  ret i32 %1
}

define i32 @atomicrmw_xor_i32_monotonic(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI95_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB95_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    xor a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB95_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i32 %b monotonic
  ret i32 %1
}

define i32 @atomicrmw_xor_i32_acquire(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 2
; XTENSA-NEXT:    l32r a8, .LCPI96_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB96_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    xor a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB96_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i32 %b acquire
  ret i32 %1
}

define i32 @atomicrmw_xor_i32_release(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI97_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB97_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    xor a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB97_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i32 %b release
  ret i32 %1
}

define i32 @atomicrmw_xor_i32_acq_rel(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i32_acq_rel:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 4
; XTENSA-NEXT:    l32r a8, .LCPI98_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i32_acq_rel:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB98_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    xor a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB98_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i32 %b acq_rel
  ret i32 %1
}

define i32 @atomicrmw_xor_i32_seq_cst(ptr %a, i32 %b) nounwind {
; XTENSA-LABEL: atomicrmw_xor_i32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI99_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a11, a3
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: atomicrmw_xor_i32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a9, a2, 0
; XTENSA-ATOMIC-NEXT:  .LBB99_1: # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a9
; XTENSA-ATOMIC-NEXT:    xor a8, a10, a3
; XTENSA-ATOMIC-NEXT:    wsr a10, scompare1
; XTENSA-ATOMIC-NEXT:    s32c1i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    mov.n a9, a8
; XTENSA-ATOMIC-NEXT:    bne a10, a8, .LBB99_1
; XTENSA-ATOMIC-NEXT:  # %bb.2:
; XTENSA-ATOMIC-NEXT:    mov.n a2, a8
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %1 = atomicrmw xor ptr %a, i32 %b seq_cst
  ret i32 %1
}

;define i32 @atomicrmw_max_i32_monotonic(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i32 %b monotonic
;  ret i32 %1
;}
;
;define i32 @atomicrmw_max_i32_acquire(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i32 %b acquire
;  ret i32 %1
;}
;
;define i32 @atomicrmw_max_i32_release(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i32 %b release
;  ret i32 %1
;}
;
;define i32 @atomicrmw_max_i32_acq_rel(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i32 %b acq_rel
;  ret i32 %1
;}
;
;define i32 @atomicrmw_max_i32_seq_cst(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw max ptr %a, i32 %b seq_cst
;  ret i32 %1
;}

;define i32 @atomicrmw_min_i32_monotonic(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i32 %b monotonic
;  ret i32 %1
;}
;
;define i32 @atomicrmw_min_i32_acquire(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i32 %b acquire
;  ret i32 %1
;}
;
;define i32 @atomicrmw_min_i32_release(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i32 %b release
;  ret i32 %1
;}
;
;define i32 @atomicrmw_min_i32_acq_rel(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i32 %b acq_rel
;  ret i32 %1
;}
;
;define i32 @atomicrmw_min_i32_seq_cst(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw min ptr %a, i32 %b seq_cst
;  ret i32 %1
;}

;define i32 @atomicrmw_umax_i32_monotonic(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i32 %b monotonic
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umax_i32_acquire(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i32 %b acquire
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umax_i32_release(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i32 %b release
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umax_i32_acq_rel(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i32 %b acq_rel
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umax_i32_seq_cst(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umax ptr %a, i32 %b seq_cst
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umin_i32_monotonic(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i32 %b monotonic
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umin_i32_acquire(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i32 %b acquire
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umin_i32_release(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i32 %b release
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umin_i32_acq_rel(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i32 %b acq_rel
;  ret i32 %1
;}
;
;define i32 @atomicrmw_umin_i32_seq_cst(ptr %a, i32 %b) nounwind {
;  %1 = atomicrmw umin ptr %a, i32 %b seq_cst
;  ret i32 %1
;}
