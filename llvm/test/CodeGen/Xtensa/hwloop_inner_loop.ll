; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -O1 -mtriple=xtensa -mcpu=esp32 %s -o - | FileCheck %s


; Function Attrs: norecurse nounwind optsize readnone
define i32 @test_hwloop(i32 %a, i32 %b, i32 %n) local_unnamed_addr #0 {
; CHECK-LABEL: test_hwloop:
; CHECK:         entry a1, 32
; CHECK-NEXT:    blti a4, 1, .LBB0_5
; CHECK-NEXT:  # %bb.1: # %for.body.preheader
; CHECK-NEXT:    movi.n a8, 0
; CHECK-NEXT:    mov.n a9, a8
; CHECK-NEXT:    j .LBB0_3
; CHECK-NEXT:  .LBB0_2: # %for.body
; CHECK-NEXT:    # in Loop: Header=BB0_3 Depth=1
; CHECK-NEXT:    add.n a2, a10, a2
; CHECK-NEXT:    addi.n a9, a9, 1
; CHECK-NEXT:    bge a9, a4, .LBB0_5
; CHECK-NEXT:  .LBB0_3: # %for.body
; CHECK-NEXT:    # =>This Inner Loop Header: Depth=1
; CHECK-NEXT:    mov.n a10, a8
; CHECK-NEXT:    bge a8, a2, .LBB0_2
; CHECK-NEXT:  # %bb.4: # %for.body
; CHECK-NEXT:    # in Loop: Header=BB0_3 Depth=1
; CHECK-NEXT:    mull a10, a2, a3
; CHECK-NEXT:    j .LBB0_2
; CHECK-NEXT:  .LBB0_5: # %for.cond.cleanup
; CHECK-NEXT:    retw.n
entry:
  %cmp7 = icmp sgt i32 %n, 0
  br i1 %cmp7, label %for.body, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body, %entry
  %a.addr.0.lcssa = phi i32 [ %a, %entry ], [ %a.addr.1, %for.body ]
  ret i32 %a.addr.0.lcssa

for.body:                                         ; preds = %entry, %for.body
  %i.09 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %a.addr.08 = phi i32 [ %a.addr.1, %for.body ], [ %a, %entry ]
  %cmp1 = icmp sgt i32 %a.addr.08, 0
  %mul = mul nsw i32 %a.addr.08, %b
  %add = select i1 %cmp1, i32 %mul, i32 0
  %a.addr.1 = add nsw i32 %add, %a.addr.08
  %inc = add nuw nsw i32 %i.09, 1
  %cmp = icmp slt i32 %inc, %n
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

