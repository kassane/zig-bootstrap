; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=xtensa -mcpu=esp32s2 -verify-machineinstrs < %s | FileCheck %s --check-prefixes=XTENSA
; RUN: llc -mtriple=xtensa -mcpu=esp32s2 -mattr=+forced-atomics -verify-machineinstrs < %s | FileCheck %s --check-prefixes=XTENSA-ATOMIC

define i8 @load8(ptr %p) nounwind {
; XTENSA-LABEL: load8:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 5
; XTENSA-NEXT:    l32r a8, .LCPI0_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: load8:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l8ui a2, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = load atomic i8, ptr %p seq_cst, align 1
  ret i8 %v
}

define void @store8(ptr %p) nounwind {
; XTENSA-LABEL: store8:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI1_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: store8:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s8i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  store atomic i8 0, ptr %p seq_cst, align 1
  ret void
}

define i8 @rmw8(ptr %p) nounwind {
; XTENSA-LABEL: rmw8:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI2_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw8:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI2_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw add ptr %p, i8 1 seq_cst, align 1
  ret i8 %v
}

define i8 @cmpxchg8(ptr %p) nounwind {
; XTENSA-LABEL: cmpxchg8:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    movi.n a8, 0
; XTENSA-NEXT:    s8i a8, a1, 3
; XTENSA-NEXT:    addi a11, a1, 3
; XTENSA-NEXT:    movi.n a12, 1
; XTENSA-NEXT:    movi.n a13, 5
; XTENSA-NEXT:    l32r a8, .LCPI3_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a14, a13
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    l8ui a2, a1, 3
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: cmpxchg8:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 0
; XTENSA-ATOMIC-NEXT:    movi.n a12, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI3_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %res = cmpxchg ptr %p, i8 0, i8 1 seq_cst seq_cst
  %res.0 = extractvalue { i8, i1 } %res, 0
  ret i8 %res.0
}

define i16 @load16(ptr %p) nounwind {
; XTENSA-LABEL: load16:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 5
; XTENSA-NEXT:    l32r a8, .LCPI4_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: load16:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l16ui a2, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = load atomic i16, ptr %p seq_cst, align 2
  ret i16 %v
}

define void @store16(ptr %p) nounwind {
; XTENSA-LABEL: store16:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI5_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: store16:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s16i a8, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  store atomic i16 0, ptr %p seq_cst, align 2
  ret void
}

define i16 @rmw16(ptr %p) nounwind {
; XTENSA-LABEL: rmw16:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI6_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw16:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI6_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw add ptr %p, i16 1 seq_cst, align 2
  ret i16 %v
}

define i16 @cmpxchg16(ptr %p) nounwind {
; XTENSA-LABEL: cmpxchg16:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    movi.n a8, 0
; XTENSA-NEXT:    s16i a8, a1, 2
; XTENSA-NEXT:    addi a11, a1, 2
; XTENSA-NEXT:    movi.n a12, 1
; XTENSA-NEXT:    movi.n a13, 5
; XTENSA-NEXT:    l32r a8, .LCPI7_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a14, a13
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    l16ui a2, a1, 2
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: cmpxchg16:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 0
; XTENSA-ATOMIC-NEXT:    movi.n a12, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI7_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %res = cmpxchg ptr %p, i16 0, i16 1 seq_cst seq_cst
  %res.0 = extractvalue { i16, i1 } %res, 0
  ret i16 %res.0
}

define i32 @load32_unordered(ptr %p) nounwind {
; XTENSA-LABEL: load32_unordered:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    l32r a8, .LCPI8_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: load32_unordered:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a2, a2, 0
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = load atomic i32, ptr %p unordered, align 4
  ret i32 %v
}

define i32 @load32_monotonic(ptr %p) nounwind {
; XTENSA-LABEL: load32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    l32r a8, .LCPI9_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: load32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a2, a2, 0
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = load atomic i32, ptr %p monotonic, align 4
  ret i32 %v
}

define i32 @load32_acquire(ptr %p) nounwind {
; XTENSA-LABEL: load32_acquire:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 2
; XTENSA-NEXT:    l32r a8, .LCPI10_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: load32_acquire:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a2, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = load atomic i32, ptr %p acquire, align 4
  ret i32 %v
}

define i32 @load32_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: load32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 5
; XTENSA-NEXT:    l32r a8, .LCPI11_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: load32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    l32i.n a2, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = load atomic i32, ptr %p seq_cst, align 4
  ret i32 %v
}

define void @store32_unordered(ptr %p) nounwind {
; XTENSA-LABEL: store32_unordered:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    l32r a8, .LCPI12_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a12, a11
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: store32_unordered:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a2, 0
; XTENSA-ATOMIC-NEXT:    retw.n
  store atomic i32 0, ptr %p unordered, align 4
  ret void
}

define void @store32_monotonic(ptr %p) nounwind {
; XTENSA-LABEL: store32_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    l32r a8, .LCPI13_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a12, a11
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: store32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a2, 0
; XTENSA-ATOMIC-NEXT:    retw.n
  store atomic i32 0, ptr %p monotonic, align 4
  ret void
}

define void @store32_release(ptr %p) nounwind {
; XTENSA-LABEL: store32_release:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    movi.n a12, 3
; XTENSA-NEXT:    l32r a8, .LCPI14_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: store32_release:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a2, 0
; XTENSA-ATOMIC-NEXT:    retw.n
  store atomic i32 0, ptr %p release, align 4
  ret void
}

define void @store32_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: store32_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 0
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI15_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: store32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a2, 0
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  store atomic i32 0, ptr %p seq_cst, align 4
  ret void
}

define i32 @rmw32_add_monotonic(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_add_monotonic:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 0
; XTENSA-NEXT:    l32r a8, .LCPI16_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_add_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI16_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw add ptr %p, i32 1 monotonic, align 4
  ret i32 %v
}

define i32 @rmw32_add_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_add_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI17_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_add_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI17_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw add ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_sub_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_sub_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI18_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_sub_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, -1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI18_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw sub ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_and_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_and_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI19_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_and_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI19_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw and ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_nand_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_nand_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI20_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_nand_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI20_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw nand ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_or_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_or_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI21_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_or_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI21_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw or ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_xor_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_xor_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI22_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_xor_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI22_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw xor ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_max_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_max_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    mov.n a6, a2
; XTENSA-NEXT:    l32i.n a2, a6, 0
; XTENSA-NEXT:    movi.n a5, 1
; XTENSA-NEXT:    movi.n a7, 5
; XTENSA-NEXT:    l32r a4, .LCPI23_0
; XTENSA-NEXT:  .LBB23_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a2, a1, 0
; XTENSA-NEXT:    max a12, a2, a5
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a6
; XTENSA-NEXT:    mov.n a13, a7
; XTENSA-NEXT:    mov.n a14, a7
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    l32i.n a2, a1, 0
; XTENSA-NEXT:    beqz a10, .LBB23_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_max_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI23_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw max ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_min_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_min_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    mov.n a6, a2
; XTENSA-NEXT:    l32i.n a2, a6, 0
; XTENSA-NEXT:    movi.n a5, 1
; XTENSA-NEXT:    movi.n a7, 5
; XTENSA-NEXT:    l32r a4, .LCPI24_0
; XTENSA-NEXT:  .LBB24_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a2, a1, 0
; XTENSA-NEXT:    min a12, a2, a5
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a6
; XTENSA-NEXT:    mov.n a13, a7
; XTENSA-NEXT:    mov.n a14, a7
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    l32i.n a2, a1, 0
; XTENSA-NEXT:    beqz a10, .LBB24_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_min_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI24_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw min ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_umax_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_umax_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    mov.n a6, a2
; XTENSA-NEXT:    l32i.n a2, a6, 0
; XTENSA-NEXT:    movi.n a5, 1
; XTENSA-NEXT:    movi.n a7, 5
; XTENSA-NEXT:    l32r a4, .LCPI25_0
; XTENSA-NEXT:  .LBB25_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a2, a1, 0
; XTENSA-NEXT:    maxu a12, a2, a5
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a6
; XTENSA-NEXT:    mov.n a13, a7
; XTENSA-NEXT:    mov.n a14, a7
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    l32i.n a2, a1, 0
; XTENSA-NEXT:    beqz a10, .LBB25_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_umax_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI25_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw umax ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_umin_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_umin_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    mov.n a6, a2
; XTENSA-NEXT:    l32i.n a2, a6, 0
; XTENSA-NEXT:    movi.n a5, 1
; XTENSA-NEXT:    movi.n a7, 5
; XTENSA-NEXT:    l32r a4, .LCPI26_0
; XTENSA-NEXT:  .LBB26_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a2, a1, 0
; XTENSA-NEXT:    minu a12, a2, a5
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a6
; XTENSA-NEXT:    mov.n a13, a7
; XTENSA-NEXT:    mov.n a14, a7
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    l32i.n a2, a1, 0
; XTENSA-NEXT:    beqz a10, .LBB26_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_umin_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI26_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw umin ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define i32 @rmw32_xchg_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_xchg_seq_cst:
; XTENSA:         entry a1, 32
; XTENSA-NEXT:    movi.n a11, 1
; XTENSA-NEXT:    movi.n a12, 5
; XTENSA-NEXT:    l32r a8, .LCPI27_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_xchg_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI27_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw xchg ptr %p, i32 1 seq_cst, align 4
  ret i32 %v
}

define float @rmw32_fadd_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_fadd_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    l32i.n a10, a2, 0
; XTENSA-NEXT:    l32r a7, .LCPI28_0
; XTENSA-NEXT:    l32r a5, .LCPI28_1
; XTENSA-NEXT:    movi.n a6, 5
; XTENSA-NEXT:    l32r a4, .LCPI28_2
; XTENSA-NEXT:  .LBB28_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a10, a1, 0
; XTENSA-NEXT:    mov.n a11, a7
; XTENSA-NEXT:    callx8 a5
; XTENSA-NEXT:    mov.n a12, a10
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a13, a6
; XTENSA-NEXT:    mov.n a14, a6
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    mov.n a8, a10
; XTENSA-NEXT:    l32i.n a10, a1, 0
; XTENSA-NEXT:    beqz a8, .LBB28_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_fadd_seq_cst:
; XTENSA-ATOMIC:         entry a1, 48
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a6, a2, 0
; XTENSA-ATOMIC-NEXT:    l32r a7, .LCPI28_0
; XTENSA-ATOMIC-NEXT:    l32r a5, .LCPI28_1
; XTENSA-ATOMIC-NEXT:    l32r a4, .LCPI28_2
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    movi.n a3, 1
; XTENSA-ATOMIC-NEXT:    j .LBB28_2
; XTENSA-ATOMIC-NEXT:  .LBB28_1: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB28_2 Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a6, a10
; XTENSA-ATOMIC-NEXT:    beqi a8, 1, .LBB28_4
; XTENSA-ATOMIC-NEXT:  .LBB28_2: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a6
; XTENSA-ATOMIC-NEXT:    mov.n a11, a7
; XTENSA-ATOMIC-NEXT:    callx8 a5
; XTENSA-ATOMIC-NEXT:    mov.n a12, a10
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    mov.n a11, a6
; XTENSA-ATOMIC-NEXT:    callx8 a4
; XTENSA-ATOMIC-NEXT:    mov.n a8, a3
; XTENSA-ATOMIC-NEXT:    beq a10, a6, .LBB28_1
; XTENSA-ATOMIC-NEXT:  # %bb.3: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB28_2 Depth=1
; XTENSA-ATOMIC-NEXT:    l32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    j .LBB28_1
; XTENSA-ATOMIC-NEXT:  .LBB28_4: # %atomicrmw.end
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw fadd ptr %p, float 1.0 seq_cst, align 4
  ret float %v
}

define float @rmw32_fsub_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_fsub_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    l32i.n a10, a2, 0
; XTENSA-NEXT:    l32r a7, .LCPI29_0
; XTENSA-NEXT:    l32r a5, .LCPI29_1
; XTENSA-NEXT:    movi.n a6, 5
; XTENSA-NEXT:    l32r a4, .LCPI29_2
; XTENSA-NEXT:  .LBB29_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a10, a1, 0
; XTENSA-NEXT:    mov.n a11, a7
; XTENSA-NEXT:    callx8 a5
; XTENSA-NEXT:    mov.n a12, a10
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a13, a6
; XTENSA-NEXT:    mov.n a14, a6
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    mov.n a8, a10
; XTENSA-NEXT:    l32i.n a10, a1, 0
; XTENSA-NEXT:    beqz a8, .LBB29_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_fsub_seq_cst:
; XTENSA-ATOMIC:         entry a1, 48
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a6, a2, 0
; XTENSA-ATOMIC-NEXT:    l32r a7, .LCPI29_0
; XTENSA-ATOMIC-NEXT:    l32r a5, .LCPI29_1
; XTENSA-ATOMIC-NEXT:    l32r a4, .LCPI29_2
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    movi.n a3, 1
; XTENSA-ATOMIC-NEXT:    j .LBB29_2
; XTENSA-ATOMIC-NEXT:  .LBB29_1: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB29_2 Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a6, a10
; XTENSA-ATOMIC-NEXT:    beqi a8, 1, .LBB29_4
; XTENSA-ATOMIC-NEXT:  .LBB29_2: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a6
; XTENSA-ATOMIC-NEXT:    mov.n a11, a7
; XTENSA-ATOMIC-NEXT:    callx8 a5
; XTENSA-ATOMIC-NEXT:    mov.n a12, a10
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    mov.n a11, a6
; XTENSA-ATOMIC-NEXT:    callx8 a4
; XTENSA-ATOMIC-NEXT:    mov.n a8, a3
; XTENSA-ATOMIC-NEXT:    beq a10, a6, .LBB29_1
; XTENSA-ATOMIC-NEXT:  # %bb.3: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB29_2 Depth=1
; XTENSA-ATOMIC-NEXT:    l32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    j .LBB29_1
; XTENSA-ATOMIC-NEXT:  .LBB29_4: # %atomicrmw.end
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw fsub ptr %p, float 1.0 seq_cst, align 4
  ret float %v
}

define float @rmw32_fmin_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_fmin_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    l32i.n a10, a2, 0
; XTENSA-NEXT:    l32r a7, .LCPI30_0
; XTENSA-NEXT:    l32r a5, .LCPI30_1
; XTENSA-NEXT:    movi.n a6, 5
; XTENSA-NEXT:    l32r a4, .LCPI30_2
; XTENSA-NEXT:  .LBB30_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a10, a1, 0
; XTENSA-NEXT:    mov.n a11, a7
; XTENSA-NEXT:    callx8 a5
; XTENSA-NEXT:    mov.n a12, a10
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a13, a6
; XTENSA-NEXT:    mov.n a14, a6
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    mov.n a8, a10
; XTENSA-NEXT:    l32i.n a10, a1, 0
; XTENSA-NEXT:    beqz a8, .LBB30_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_fmin_seq_cst:
; XTENSA-ATOMIC:         entry a1, 48
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a6, a2, 0
; XTENSA-ATOMIC-NEXT:    l32r a7, .LCPI30_0
; XTENSA-ATOMIC-NEXT:    l32r a5, .LCPI30_1
; XTENSA-ATOMIC-NEXT:    l32r a4, .LCPI30_2
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    movi.n a3, 1
; XTENSA-ATOMIC-NEXT:    j .LBB30_2
; XTENSA-ATOMIC-NEXT:  .LBB30_1: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB30_2 Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a6, a10
; XTENSA-ATOMIC-NEXT:    beqi a8, 1, .LBB30_4
; XTENSA-ATOMIC-NEXT:  .LBB30_2: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a6
; XTENSA-ATOMIC-NEXT:    mov.n a11, a7
; XTENSA-ATOMIC-NEXT:    callx8 a5
; XTENSA-ATOMIC-NEXT:    mov.n a12, a10
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    mov.n a11, a6
; XTENSA-ATOMIC-NEXT:    callx8 a4
; XTENSA-ATOMIC-NEXT:    mov.n a8, a3
; XTENSA-ATOMIC-NEXT:    beq a10, a6, .LBB30_1
; XTENSA-ATOMIC-NEXT:  # %bb.3: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB30_2 Depth=1
; XTENSA-ATOMIC-NEXT:    l32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    j .LBB30_1
; XTENSA-ATOMIC-NEXT:  .LBB30_4: # %atomicrmw.end
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw fmin ptr %p, float 1.0 seq_cst, align 4
  ret float %v
}

define float @rmw32_fmax_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: rmw32_fmax_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    l32i.n a10, a2, 0
; XTENSA-NEXT:    l32r a7, .LCPI31_0
; XTENSA-NEXT:    l32r a5, .LCPI31_1
; XTENSA-NEXT:    movi.n a6, 5
; XTENSA-NEXT:    l32r a4, .LCPI31_2
; XTENSA-NEXT:  .LBB31_1: # %atomicrmw.start
; XTENSA-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-NEXT:    s32i.n a10, a1, 0
; XTENSA-NEXT:    mov.n a11, a7
; XTENSA-NEXT:    callx8 a5
; XTENSA-NEXT:    mov.n a12, a10
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a13, a6
; XTENSA-NEXT:    mov.n a14, a6
; XTENSA-NEXT:    callx8 a4
; XTENSA-NEXT:    mov.n a8, a10
; XTENSA-NEXT:    l32i.n a10, a1, 0
; XTENSA-NEXT:    beqz a8, .LBB31_1
; XTENSA-NEXT:  # %bb.2: # %atomicrmw.end
; XTENSA-NEXT:    mov.n a2, a10
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: rmw32_fmax_seq_cst:
; XTENSA-ATOMIC:         entry a1, 48
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    l32i.n a6, a2, 0
; XTENSA-ATOMIC-NEXT:    l32r a7, .LCPI31_0
; XTENSA-ATOMIC-NEXT:    l32r a5, .LCPI31_1
; XTENSA-ATOMIC-NEXT:    l32r a4, .LCPI31_2
; XTENSA-ATOMIC-NEXT:    movi.n a8, 0
; XTENSA-ATOMIC-NEXT:    s32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    movi.n a3, 1
; XTENSA-ATOMIC-NEXT:    j .LBB31_2
; XTENSA-ATOMIC-NEXT:  .LBB31_1: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB31_2 Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a6, a10
; XTENSA-ATOMIC-NEXT:    beqi a8, 1, .LBB31_4
; XTENSA-ATOMIC-NEXT:  .LBB31_2: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # =>This Inner Loop Header: Depth=1
; XTENSA-ATOMIC-NEXT:    mov.n a10, a6
; XTENSA-ATOMIC-NEXT:    mov.n a11, a7
; XTENSA-ATOMIC-NEXT:    callx8 a5
; XTENSA-ATOMIC-NEXT:    mov.n a12, a10
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    mov.n a11, a6
; XTENSA-ATOMIC-NEXT:    callx8 a4
; XTENSA-ATOMIC-NEXT:    mov.n a8, a3
; XTENSA-ATOMIC-NEXT:    beq a10, a6, .LBB31_1
; XTENSA-ATOMIC-NEXT:  # %bb.3: # %atomicrmw.start
; XTENSA-ATOMIC-NEXT:    # in Loop: Header=BB31_2 Depth=1
; XTENSA-ATOMIC-NEXT:    l32i.n a8, a1, 0
; XTENSA-ATOMIC-NEXT:    j .LBB31_1
; XTENSA-ATOMIC-NEXT:  .LBB31_4: # %atomicrmw.end
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %v = atomicrmw fmax ptr %p, float 1.0 seq_cst, align 4
  ret float %v
}

define i32 @cmpxchg32_monotonic(ptr %p) nounwind {
; XTENSA-LABEL: cmpxchg32_monotonic:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    movi.n a13, 0
; XTENSA-NEXT:    s32i.n a13, a1, 0
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    movi.n a12, 1
; XTENSA-NEXT:    l32r a8, .LCPI32_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a14, a13
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    l32i.n a2, a1, 0
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: cmpxchg32_monotonic:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    movi.n a11, 0
; XTENSA-ATOMIC-NEXT:    movi.n a12, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI32_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    retw.n
  %res = cmpxchg ptr %p, i32 0, i32 1 monotonic monotonic
  %res.0 = extractvalue { i32, i1 } %res, 0
  ret i32 %res.0
}

define i32 @cmpxchg32_seq_cst(ptr %p) nounwind {
; XTENSA-LABEL: cmpxchg32_seq_cst:
; XTENSA:         entry a1, 48
; XTENSA-NEXT:    movi.n a8, 0
; XTENSA-NEXT:    s32i.n a8, a1, 0
; XTENSA-NEXT:    addi a11, a1, 0
; XTENSA-NEXT:    movi.n a12, 1
; XTENSA-NEXT:    movi.n a13, 5
; XTENSA-NEXT:    l32r a8, .LCPI33_0
; XTENSA-NEXT:    mov.n a10, a2
; XTENSA-NEXT:    mov.n a14, a13
; XTENSA-NEXT:    callx8 a8
; XTENSA-NEXT:    l32i.n a2, a1, 0
; XTENSA-NEXT:    retw.n
;
; XTENSA-ATOMIC-LABEL: cmpxchg32_seq_cst:
; XTENSA-ATOMIC:         entry a1, 32
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    movi.n a11, 0
; XTENSA-ATOMIC-NEXT:    movi.n a12, 1
; XTENSA-ATOMIC-NEXT:    l32r a8, .LCPI33_0
; XTENSA-ATOMIC-NEXT:    mov.n a10, a2
; XTENSA-ATOMIC-NEXT:    callx8 a8
; XTENSA-ATOMIC-NEXT:    mov.n a2, a10
; XTENSA-ATOMIC-NEXT:    memw
; XTENSA-ATOMIC-NEXT:    retw.n
  %res = cmpxchg ptr %p, i32 0, i32 1 seq_cst seq_cst
  %res.0 = extractvalue { i32, i1 } %res, 0
  ret i32 %res.0
}
